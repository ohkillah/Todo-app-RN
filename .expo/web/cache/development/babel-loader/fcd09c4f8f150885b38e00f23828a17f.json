{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTask } from \"../redux/taskSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TodoHeader = function TodoHeader() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    todo = _useState2[0],\n    setTodo = _useState2[1];\n  var dispatch = useDispatch();\n  var onSubmitTask = function onSubmitTask() {\n    if (todo.trim().length === 0) {\n      Alert.alert(\"You need to enter a task\");\n      setTodo(\"\");\n      return;\n    }\n    dispatch(addTask({\n      task: todo\n    }));\n    setTodo(\"\");\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        marginTop: 10\n      },\n      children: \"Todo List\"\n    }), _jsxs(View, {\n      style: {\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(TextInput, {\n        style: {\n          borderColor: \"gray\",\n          borderWidth: 1,\n          padding: 10,\n          margin: 10,\n          width: \"90%\",\n          borderRadius: 5\n        },\n        placeholder: \"Add todo\",\n        onChangeText: setTodo,\n        value: todo\n      }), _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: \"black\",\n          padding: 10,\n          margin: 10,\n          width: \"90%\",\n          borderRadius: 5,\n          alignItems: \"center\"\n        },\n        onPress: onSubmitTask,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Add\"\n        })\n      })]\n    })]\n  });\n};\nexport default TodoHeader;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","useDispatch","addTask","TodoHeader","todo","setTodo","dispatch","onSubmitTask","trim","length","Alert","alert","task","fontSize","fontWeight","textAlign","marginTop","justifyContent","alignItems","borderColor","borderWidth","padding","margin","width","borderRadius","backgroundColor","color","styles","StyleSheet","create"],"sources":["/Users/kevich/Desktop/Todo-app/src/components/TodoHeader.js"],"sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTask } from \"../redux/taskSlice\";\n\nconst TodoHeader = () => {\n  const [todo, setTodo] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const onSubmitTask = () => {\n    if (todo.trim().length === 0) {\n      Alert.alert(\"You need to enter a task\");\n      setTodo(\"\");\n      return;\n    }\n\n    dispatch(\n      addTask({\n        task: todo,\n      })\n    );\n    setTodo(\"\");\n  };\n\n  return (\n    <View>\n      <Text\n        style={{\n          fontSize: 20,\n          fontWeight: \"bold\",\n          textAlign: \"center\",\n          marginTop: 10,\n        }}\n      >\n        Todo List\n      </Text>\n      <View\n        style={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {/* TextInput */}\n        <TextInput\n          style={{\n            borderColor: \"gray\",\n            borderWidth: 1,\n            padding: 10,\n            margin: 10,\n            width: \"90%\",\n            borderRadius: 5,\n          }}\n          placeholder=\"Add todo\"\n          onChangeText={setTodo}\n          value={todo}\n        />\n        {/* Button */}\n        <TouchableOpacity\n          style={{\n            backgroundColor: \"black\",\n            padding: 10,\n            margin: 10,\n            width: \"90%\",\n            borderRadius: 5,\n            alignItems: \"center\",\n          }}\n          onPress={onSubmitTask}\n        >\n          <Text style={{ color: \"white\" }}>Add</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default TodoHeader;\n\nconst styles = StyleSheet.create({});\n"],"mappings":";;;;;;;AAQA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO;AAA6B;AAAA;AAE7C,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;EACvB,gBAAwBH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BI,IAAI;IAAEC,OAAO;EAEpB,IAAMC,QAAQ,GAAGL,WAAW,EAAE;EAE9B,IAAMM,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzB,IAAIH,IAAI,CAACI,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MAC5BC,KAAK,CAACC,KAAK,CAAC,0BAA0B,CAAC;MACvCN,OAAO,CAAC,EAAE,CAAC;MACX;IACF;IAEAC,QAAQ,CACNJ,OAAO,CAAC;MACNU,IAAI,EAAER;IACR,CAAC,CAAC,CACH;IACDC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,OACE,MAAC,IAAI;IAAA,WACH,KAAC,IAAI;MACH,KAAK,EAAE;QACLQ,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE,MAAM;QAClBC,SAAS,EAAE,QAAQ;QACnBC,SAAS,EAAE;MACb,CAAE;MAAA;IAAA,EAGG,EACP,MAAC,IAAI;MACH,KAAK,EAAE;QACLC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MAAA,WAGF,KAAC,SAAS;QACR,KAAK,EAAE;UACLC,WAAW,EAAE,MAAM;UACnBC,WAAW,EAAE,CAAC;UACdC,OAAO,EAAE,EAAE;UACXC,MAAM,EAAE,EAAE;UACVC,KAAK,EAAE,KAAK;UACZC,YAAY,EAAE;QAChB,CAAE;QACF,WAAW,EAAC,UAAU;QACtB,YAAY,EAAEnB,OAAQ;QACtB,KAAK,EAAED;MAAK,EACZ,EAEF,KAAC,gBAAgB;QACf,KAAK,EAAE;UACLqB,eAAe,EAAE,OAAO;UACxBJ,OAAO,EAAE,EAAE;UACXC,MAAM,EAAE,EAAE;UACVC,KAAK,EAAE,KAAK;UACZC,YAAY,EAAE,CAAC;UACfN,UAAU,EAAE;QACd,CAAE;QACF,OAAO,EAAEX,YAAa;QAAA,UAEtB,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEmB,KAAK,EAAE;UAAQ,CAAE;UAAA;QAAA;MAAW,EAC1B;IAAA,EACd;EAAA,EACF;AAEX,CAAC;AAED,eAAevB,UAAU;AAEzB,IAAMwB,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}